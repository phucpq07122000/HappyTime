{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    if (params.rowNode.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(_ref => {\n        let [id, fields] = _ref;\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id][field];\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridCellEditing","GridCellModes","GridEditModes","useGridRowEditing","gridEditRowsStateSelector","isAutoGeneratedRow","editingStateInitializer","state","editRows","useGridEditing","apiRef","props","debounceMap","useRef","isCellEditable","isCellEditableProp","useCallback","params","rowNode","colDef","editable","renderEditCell","type","maybeDebounce","id","field","debounceMs","callback","current","timeout","clearTimeout","runImmediately","setTimeout","useEffect","debounces","Object","entries","forEach","_ref","fields","keys","runPendingEditCellValueMutation","debouncedField","runCallback","setEditCellValue","Promise","resolve","setEditCellValueToCall","editMode","Row","setRowEditingEditCellValue","setCellEditingEditCellValue","getCellMode","Edit","result","getRowWithUpdatedValues","Cell","getRowWithUpdatedValuesFromCellEditing","getRowWithUpdatedValuesFromRowEditing","getEditCellMeta","editingState","editingSharedApi","unstable_getEditCellMeta","editingSharedPrivateApi"],"sources":["C:/Users/Tran Ho/Desktop/happy_time/HappyTime/happytime/node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    if (params.rowNode.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id][field];\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}